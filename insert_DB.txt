insert into member (member_id, email, name, password) values (1, 'test@naver.com', 'tester', 'qwe123!@3'); # 테스트 계정

insert into scenario (scenario_id, title, sub_title, summary, content, stage_count, level, enable, img) values
        (1, "간단한 커뮤니티 게시판 만들기", "Simple-Community-Board",
         "아래의 기능 구현을 주제로 한 </br> 초심자용 커뮤니티 게시판 제작 시나리오.",
         "전세계적으로 인터넷이 확대되면서 보안 기능은 꼭 필요한 과정이 되어 가고 있습니다. 인터넷 커뮤니티를 만들 때 가장 기본이 되는 과정과 그 때 필요한 보안 기능에 관하여 배울 수 있습니다.", 7, "Beginner", "Y", "color1.png"),
        (2, "간단한 쇼핑몰 만들기", "Simple-Shopping-Site",
         "아래의 기능 구현을 주제로 한 </br> 초심자용 쇼핑몰 제작 시나리오.",
         "전세계적으로 인터넷이 확대되면서 보안 기능은 꼭 필요한 과정이 되어 가고 있습니다. 인터넷 커뮤니티를 만들 때 가장 기본이 되는 과정과 그 때 필요한 보안 기능에 관하여 배울 수 있습니다.", 7, "Beginner", "N", "color2.png"),
        (3, "간단한 메일함 만들기", "Simple-Mailbox-Site",
         "아래의 기능 구현을 주제로 한 </br> 초심자용 메일함 제작 시나리오.",
         "전세계적으로 인터넷이 확대되면서 보안 기능은 꼭 필요한 과정이 되어 가고 있습니다. 인터넷 커뮤니티를 만들 때 가장 기본이 되는 과정과 그 때 필요한 보안 기능에 관하여 배울 수 있습니다.", 6, "Beginner", "N", "color3.png"),
        (4, "워드프레스를 이용한 커뮤니티 게시판 만들기", "Community-Board-Using-Wordpress",
         "워드프레스를 이용한 커뮤니티 게시판 제작. <br> 아래 기능 구현에서 발생하는 취약점 위주의 <br> 보안 검사 시행.",
         "전세계적으로 인터넷이 확대되면서 보안 기능은 꼭 필요한 과정이 되어 가고 있습니다. 인터넷 커뮤니티를 만들 때 가장 기본이 되는 과정과 그 때 필요한 보안 기능에 관하여 배울 수 있습니다.", 7, "Senior", "N", "color4.png"),
        (5, "그누보드 영카트5를 이용한 쇼핑몰 만들기", "Shopping-Site-Using-Youngcart5",
         "그누보드의 영카트5를 이용한 쇼핑몰 제작. <br> 아래 기능 구현에서 발생하는 취약점 위주의 <br> 보안 검사 시행.",
         "전세계적으로 인터넷이 확대되면서 보안 기능은 꼭 필요한 과정이 되어 가고 있습니다. 인터넷 커뮤니티를 만들 때 가장 기본이 되는 과정과 그 때 필요한 보안 기능에 관하여 배울 수 있습니다.", 3, "Senior", "N", "color5.png");


insert into stage (stage_id, scenario_id, no, title) values
        (1, 1, 1, "회원가입 및 로그인"),
        (2, 1, 2, "게시물 작성"),
        (3, 1, 3, "게시판"),
        (4, 1, 4, "게시물 수정 및 삭제"),
        (5, 1, 5, "게시판 검색"),
        (6, 1, 6, "비밀 게시물"),
        (7, 1, 7, "파일 업로드 및 다운로드"),
        (8, 2, 1, "회원가입 및 로그인"),
        (9, 2, 2, "상품 등록"),
        (10, 2, 3, "상품 카테고리 목록"),
        (11, 2, 4, "상품 수정 및 삭제"),
        (12, 2, 5, "장바구니"),
        (13, 2, 6, "결제"),
        (14, 2, 7, "결제 내역"),
        (15, 3, 1, "회원가입 및 로그인"),
        (16, 3, 2, "메일 연동 및 전송"),
        (17, 3, 3, "받은 메일 목록 및 보낸 메일 목록"),
        (18, 3, 4, "메일 열람"),
        (19, 3, 5, "메일 삭제 및 복원"),
        (20, 3, 6, "메일 첨부파일"),
        (21, 4, 1, "회원가입 및 로그인"),
        (22, 4, 2, "게시물 작성"),
        (23, 4, 3, "게시판"),
        (24, 4, 4, "게시물 수정 및 삭제"),
        (25, 4, 5, "게시판 검색"),
        (26, 4, 6, "비밀 게시물"),
        (27, 4, 7, "파일 업로드 및 다운로드"),
        (28, 5, 1, "그누보드 영카트5 설정"),
        (29, 5, 2, "다중 검색 기능"),
        (30, 5, 3, "다중 정렬 기능"),
        (31, 5, 4, "쿠폰 사용 가능 상품 스킨 추가");

insert into subject (subject_id, stage_id, title) values
        (1, 1, "회원가입"),
        (2, 1, "로그인"),
        (3, 2, "게시물 작성"),
        (4, 2, "게시물 열람"),
        (5, 3, "게시판 목록"),
        (6, 4, "게시물 수정"),
        (7, 4, "게시물 삭제"),
        (8, 5, "게시물 검색"),
        (9, 6, "비밀글 설정"),
        (10, 6, "비밀글 열람"),
        (11, 7, "파일 업로드"),
        (12, 7, "파일 다운로드");

insert into request (request_id, subject_id, content) values
        (1, 1, "페이지 URL 명은 signUp_check 으로 지정한다."),
        (2, 1, "중복된 아이디로 회원가입이 되면 안된다."),
        (3, 1, "비밀번호는 영어, 숫자, 특수문자가 하나 이상씩 포함돼야 한다."),
        (4, 1, "비밀번호는 최소 9자 이상이어야 한다."),
        (5, 1, "특수문자는 !@#$%^&*가 보장되어야 한다."),
        (6, 2, "페이지 URL 명은 login_check 으로 지정한다."),
        (7, 2, "로그인은 회원가입에 성공한 계정으로만 가능해야 한다."),
        (8, 3, "페이지 URL 명은 writeDocument_check 으로 지정한다."),
        (9, 3, "게시물 작성은 로그인한 사용자만 가능하다."),
        (10, 3, "게시물 작성이 성공하면 1 이상의 고유한 게시물 번호를 부여받는다."),
        (11, 3, "게시물 작성이 실패하면 수행 결과에서 게시물 번호로 -1이 반환된다."),
        (12, 3, "제목의 최대 길이는 최소 80자 이상이어야 한다."),
        (13, 3, "내용의 최대 길이는 최소 300자 이상이어야 한다."),
        (14, 4, "페이지 URL 명은 document 로 지정한다."),
        (15, 4, "게시물 페이지는 게시물 번호를 파라미터로 받아 해당 게시물의 내용을 보여준다."),
        (16, 4, "게시물이 없을 경우 Fail 출력"),
        (17, 5, "페이지 URL 명은 board 로 지정한다."),
        (18, 5, "게시판 페이지는 게시물들의 목록을 보여준다."),
        (19, 5, "가장 최근에 작성한 게시물이 목록 최상단에 있어야 한다."),
        (20, 5, "목록의 각 항목에는 제목이 있어야 하고, 제목을 클릭하면 해당 게시물 페이지로 이동해야 한다."),
        (21, 6, "페이지 URL 명은 modifyDocument_check 으로 지정한다."),
        (22, 6, "게시물 수정은 게시물을 작성한 사람만 할 수 있다."),
        (23, 7, "페이지 URL 명은 deleteDocument_check 으로 지정한다."),
        (24, 7, "게시물 삭제는 게시물을 작성한 사람만 할 수 있다."),
        (25, 8, "페이지 URL 명은 board 로 지정한다."),
        (26, 8, "게시판 페이지에서 게시물 검색을 할 수 있다."),
        (27, 9, "게시물 작성 및 수정 페이지에서 게시물에 비밀글 설정을 할 수 있다."),
        (28, 9, "기존 파라미터에 추가적으로 secret과 passwd 파라미터가 더해진다."),
        (29, 9, "비밀글은 게시물 비밀번호를 아는 사용자만 볼 수 있다."),
        (30, 9, "게시물 비밀번호는 4자리 숫자만 사용가능하다."),
        (31, 10, "비밀글 설정이 되어있는 게시물 페이지를 방문할 때는 추가적으로 passwd 파라미터가 필요하다."),
        (32, 10, "비밀글에 접근할 때 비밀번호가 틀리거나 제공되지 않으면 결과로 Fail을 출력한다."),
        (33, 11, "게시물 작성 및 수정 페이지에서 파일 업로드를 할 수 있다."),
        (34, 11, "한 게시물 당 하나 이상의 파일을 업로드할 수 있으며, 업르드 가능한 최대 용량은 최소 1MB 이상 이어야이다."),
        (35, 12, "페이지 URL 명은 fileDownload 로 지정한다."),
        (36, 12, "기존 파라미터에 추가적으로 file 파라미터가 더해진다."),
        (37, 12, "게시물 페이지에서 업로드된 파일의 이름을 확인할 수 있다."),
        (38, 12, "파일의 이름을 클릭할 경우 download 페이지로 이동하여, 해당 파일을 다운로드 할 수 있다."),
        (39, 12, "파일 다운로드 URL에는 number 파라미터와 file 파라미터가 존재한다."),
        (40, 12, "파라미터에 맞는 파일이 존재하지 않을 경우 HTML Status Code로 404를 반환한다.");



insert into parameter_group (group_id, subject_id, type) values
        (1, 1, "POST"),
        (2, 2, "POST"),
        (3, 3, "POST"),
        (4, 4, "GET"),
        (5, 5, "GET"),
        (6, 6, "POST"),
        (7, 7, "POST"),
        (8, 8, "GET"),
        (9, 9, "POST"),
        (10, 10, "POST"),
        (11, 11, "POST"),
        (12, 12, "GET");


insert into parameter (parameter_id, group_id, name, value) values
        (1, 1, "id", "계정 아이디"),
        (2, 1, "passwd", "계정 비밀번호"),
        (3, 2, "id", "계정 아이디"),
        (4, 2, "passwd", "계정 비밀번호"),
        (5, 3, "title", "게시글 제목"),
        (6, 3, "content", "게시글 내용"),
        (7, 4, "number", "게시물 번호"),
        (8, 5, "pageNo", "페이지 번호"),
        (9, 6, "number", "게시물 번호"),
        (10, 6, "title", "게시물 제목"),
        (11, 6, "content", "게시물 내용"),
        (12, 7, "number", "게시물 번호"),
        (13, 8, "category", "문자열 \"title\" or \"content\""),
        (14, 8, "search", "검색 내용"),
        (15, 9, "secret", "문자열 \"true\" or \"false\""),
        (16, 9, "passwd", "게시물 비밀번호(secret이 true일 때만 제공"),
        (17, 10, "passwd", "게시물 비밀번호"),
        (18, 11, "file", "업로드 파일"),
        (19, 12, "number", "게시물 번호"),
        (20, 12, "file", "다운로드 파일 이름");


insert into result (result_id, subject_id, content) values
        (1, 1, "<any id='result'>[회원가입 성공 여부]</any>"),
        (2, 1, "[회원가입 성공 여부]: Success/Fail"),
        (3, 2, "<any id='result'>[로그인 성공 여부]</any>"),
        (4, 2, "[로그인 성공 여부]: Success/Fail"),
        (5, 3, "<any id='number'>[게시물 번호]</any>"),
        (6, 4, "<any id='result'>Fail</any> (게시물이 없을 때만 제공)"),
        (7, 4, "<any id='number'>[게시물 번호]</any>"),
        (8, 4, "<any id='title'>[게시물 제목]</any>"),
        (9, 4, "<any id='content'>[게시물 내용]</any>"),
        (10, 5, "<any id='title_[게시물 번호]'>[게시물 제목]</any>"),
        (11, 6, "<any id='result'>[수정 성공 여부]</any>"),
        (12, 6, "[수정 성공 여부]: Success/Fail"),
        (13, 7, "<any id='result'>[삭제 성공 여부]</any>"),
        (14, 7, "[삭제 성공 여부]: Success/Fail"),
        (15, 8, "<any id='title_[게시물 번호]'>[게시물 제목]</any>"),
        (16, 9, ""),
        (17, 10, "<any id='result'>Fail</any> (비밀번호 틀릴 시에만 제공)"),
        (18, 11, ""),
        (19, 12, "파일 (파일이 존재할 때만 제공)");


insert into poc_category (poc_category_id, stage_id, type) values
        (1, 1, "FUNCTION"),
        (2, 1, "SECURITY"),
        (3, 2, "FUNCTION"),
        (4, 2, "SECURITY"),
        (5, 3, "FUNCTION"),
        (6, 3, "SECURITY"),
        (7, 4, "FUNCTION"),
        (8, 4, "SECURITY"),
        (9, 5, "FUNCTION"),
        (10, 5, "SECURITY"),
        (11, 6, "FUNCTION"),
        (12, 6, "SECURITY"),
        (13, 7, "FUNCTION"),
        (14, 7, "SECURITY");



insert into poc_solution (solution_id, title, reason, manual, source) values
        (1, "DUMP", "", "", ""),
        (2, "SQL Injection 취약점",
        "<ul><li>Sql 쿼리문을 string으로 concat 하여 만들기 때문에 발생한다. (아래의 예를 참조)</li><li>ex) <code>$sql = \"select * from member where id='$_POST['id']' and pass='$_POST['pass']'\";</code></li><li>위의 예와 같이 사용자의 값이 쿼리에 concat 되어 Sql 구문을 완성하고 이를 실행 시키게 되면 </br> 유저의 입력 값이 Sql 쿼리문에 영향을 주게 되고 이로 인해 개발자가 의도하지 않은 방향대로 쿼리를 조작 가능하다.</li></ul>",
        "<ul><li>1). 개발자가 의도한 사용자의 입력 값은 쿼리문에 영향이 가는 입력 값이 아닌 순수한 문자열 값이다. 따라서 사용자가 입력한 특수 문자들 (', \" ,\ 등)이 쿼리문에 영향을 줄 수 없도록 유저들의 입력 값에 addslashes 혹은 mysqli_real_escape_string등 입력 값의 특수 문자들을 escape 하는 함수를 적용한다.</li><li>2). 최근에는 유저의 입력 값이 Sql 쿼리문 자체에 영향을 줄 수 없도록 하는 repared statement 함수가 제공되고 있다. 해당 기능을 이용하면 addslashes, mysqli_real_escape_string 함수의 도움 없이도 사용자의 입력 값이 escape 되어 문자열 값으로 인식 된다.</li><li>3). 위의 1), 2) 방법이 효과적으로 Sql 인젝션 공격 기법을 방어하는 점은 사실이지만 위 방법을 이용해도 Sql 인젝션 공격을 방어하지 못하는 경우가 있다. 이는 아래의 코드와 같이 '' 로 입력 값을 둘러 싸지 않아서 발생 되는 경우로 이 경우에는 입력 값을 escape 해도 Sql 쿼리문을 조작 할 수 있게 된다.</li><li><code>$sql = \"select * from member where no=$_POST['no']\";</code></li> <li>위의 예제와 같은 경우 '' 값이 없어 유저의 입력값이 자유롭게 sql 쿼리문을 조작 할 수 있게 된다. 따라서 위와 같은 경우에 대해서 Sql 인젝션 공격 기법을 방어 하기 위해서는 Sql 쿼리문에 사용 되는 주요 키워드 (or, and, select, union 등) 들을 따로 필터해야만 한다.</li><li>ex) <code>if(preg_match('/prob|_|\.|proc|union|sleep|benchmark/i', $_POST[no])) exit(\"No Hack ~_~\");</code></li></ul>",
        "<ul><li>2019 한국 인터넷 진흥원 소프트웨어 개발 보안 가이드 p148 참고</li><li>2019 행안부 한국인터넷 진흥원 소프트웨어 보안약점 진단가이드 p178 참고</li><li>OWASP top 10 2017 pdf 파일 p7 참조</li><li>국정원 8대 취약점 참고</li></ul>"),
        (3, "XSS 취약점",
        "<ul><li>URL의 파라미터가 HTML 페이지의 내용을 구성하는 내용으로 전달 되거나 사용자 입력 폼에 자바스크립트 사용이 허용되어 있을 경우, 공격자는 사용자 또는 관리자의 Cookie 나 Session 값과 같은 유용한 정보를 획득하여 다른 취약점과 연계공격이 가능하다.</li><li>ex) <code>&lt;html&gt;&lt;p&gt;&lt;?=$_GET['url']?&gt;&lt;/p&gt;&lt;/html&gt;</code></li><li>위 코드의 경우 url 파라미터를 통해 html, javascript 구문을 자유롭게 삽입 할 수 있으며 이로 인해 원하는 script 구문을 실행 가능하다.</li></ul>",
        "<ul><li>Cross Site Script 의 원인은 외부에서 입력된 값이나 DB에 저장되어 있는 값을 사용하여 동적인 웹페이지를 생성할 때 애플리케이션이 입력값에 대한 충분한 검증작업 없이 입력값을 사용하기 때문에 발생한다.</li><li>따라서 해당 취약점을 예방하기 위해서는 모든 코드들을 상세히 검증하는 것으로 헤더, 쿠키, 질의문, 폼 필드와 숨겨진 필드등과 같은 모든 파라미터들을 엄격한 규칙에 의해서 검증해야 한다. 특히 특정 특수 문자들에 대해서 HTML 인코딩을 적용하여 스크립트가 동작하지 않도록 할 수도 있다.</li></ul>",
        "<ul><li>2019 한국 인터넷 진흥원 소프트웨어 개발 보안 가이드 p160 참고</li><li>2019 행안부 한국인터넷 진흥원 소프트웨어 보안약점 진단가이드 p202 참고</li><li>OWASP top 10 2017 pdf 파일 p13 참조</li><li>국정원 8대 취약점 참고</li></ul>"),
        (4, "백업 파일 존재",
        "<ul><li>웹 서버의 환경 혹은 에디터에 따라 임시 파일 혹은 swp 파일이 생성 될 수 있다.</li><ul>",
        "<ul><li>생성된 백업, 임시 파일 들은 실제 파일의 소스코드를 그대로 가지고 있기 때문에  해당 파일들은 반드시 제거한다.</li><li>ex) <code>.index.php.swp , index.phps , index.php~ , .index.php.bak</code></li></ul>",
        "<ul><li>2019 한국 인터넷 진흥원 소프트웨어 개발 보안 가이드 p222 참고</li><li>2019 행안부 한국인터넷 진흥원 소프트웨어 보안약점 진단가이드 p302 참고</li><li>OWASP top 10 2017 pdf 파일 p9 , p11 참조</li></ul>"),
        (5, "불충분한 인증",
        "<ul><li><p>웹에서 주요 정보를 파라미터로 전달할 경우 사용자에 의해 변조될 수 있으며, 변조된 파라미터는 타 사용자의 권한을 획득하거나 개발자가 예상하지 못한 오류를 발생하는데 사용될 수 있다. 파라미터 변조는 주로 아래와 같은 환경에서 공격에 이용됩니다.</p></li><li><p><code>1. 게시판 같은 곳에서 특정 글의 고유번호를 저장하여 수정 및 삭제 시 이용한다.</code></p></li><li><p><code>2. 쇼핑몰 같은 곳에서 가격정보로 이용한다.</code></p></li><li><p><code>3. 게임사이트 같은 곳에서 포인트 정보로 이용한다.</code></p></li><li><p><code>4. Redirect를 사용하고 있으며 이동 가능한 사이트 목록을 관리하고 있지 않다.</code></p></li><li><p>파라미터 변조 시도 방법</p></li><li><p><code>1. 쇼핑몰 사이트에서 특정 상품의 구매 과정에서 가격정보와 같은 것의 흐름을 파악한다.</code></p></li><li><p><code>2. 가격정보가 파라미터로 넘기는 것을 웹 프록시 툴로 확인한다.</code></p></li><li><p><code>3. 정상적인 가격을 아주 저가로 변조하여 구매를 완료 한다.</code></p></li></ul>",
        "<ul><li><ol><li>가격과 같이 중요한 정보는 파라미터 필드로 값을 판단하지 않을 것 최종 구매가 일어나는 시점에 다시 서버에서 가격 정보를 가져 오도록 작성.</li></ol></li><li><ol start='2'><li>파라미터의 내용을 암호화 하여 전달.</li></ol></li><li><ol start='3'><li>입력받는 값을 White list로 관리하여 특정 값 이외에는 전부 차단.</li></ol></li></ul>",
        "<ul><li>2019 한국 인터넷 진흥원 소프트웨어 개발 보안 가이드 p218 참고</li><li>2019 행안부 한국인터넷 진흥원 소프트웨어 보안약점 진단가이드 p296 참고</li><li>OWASP top 10 2017 pdf 파일 p8 참조</li></ul>"),
        (6, "파일 업로드 취약점",
        "<ul><li>파일 업로드 시 일반적인 확장자가 아닌 php, jsp , asp 등 백앤드 언어 확장자를 가진 파일을 업로드 할 수 있고 업로드 된 파일에 접근 하여 실행 할 수 있다면 백앤드 언어가 실행 할 수 있는 취약점이다.</li><li>백앤드 언어가 실행되면 system, exec 등 서버 명령어를 실행 할 수 있게 되기 때문에 원격 명령어 삽입 취약점인 RCE가 가능하기 때문에 매우 위험한 취약점이다.</li></ul>",
        "<ul><li>우선 파일 업로드 시 php, jsp 등 백엔드 언어의 확장자를 가진 파일이 업로드 될 수 없도록 만들어야 한다.</li><li>파일을 업로드 하더라도 해당 파일명 + 확장자까지 해쉬화 하여 백앤드 언어로 실행 할 수 없도록 하며 저장된 파일에 사용자가  접근 할 수 없게 하여 파일 실행을 방지한다.</li><li>마지막으로 파일이 저장되는 디렉토리에 대해서 실행 권한을 제거 함으로서 설령 접근 되더라도 해당 파일이 실행 되는 것을 방지 한다.</li></ul>",
        "<ul><li>2019 한국 인터넷 진흥원 소프트웨어 개발 보안 가이드 p170 참고</li><li>2019 행안부 한국인터넷 진흥원 소프트웨어 보안약점 진단가이드 p223 참고</li><li>국정원 8대 취약점 참고</li></ul>"),
        (7, "파일 다운로드 취약점",
        "<ul><li>홈페이지 상에서 파일을 다운받거나 업로드 시키는 경우 cgi, jsp, php, asp 등의 백앤드 언어들을 사용한다. 만일 첨부된 파일을 다운로드 할 때 인자 값을 조작하여 해당 파일이 아닌 다른 파일을 다운로드 될 수 있게 되면 웹 서버내 주요 파일 및 파일 소스가 다운로드 가능하다.</li></ul>",
        "<ul><li>다운로드 파일의 이름을 데이터베이스에 저장하고 다운로드 수행 시 요청 파일 이름과 비교하여 적절한지 확인하여 사용자가 조작할 수 있는 변수를 제거해야 하며 다운로드 위치는 지정된 데이터 저장소를 고정하여 사용하는 것이 바람직함.</li><li>프로그램 내에서 파일을 다운받을 수 있는 디렉터리를 특정 디렉터리로 한정하고 이 외의 다른 디렉터리에서는 파일을 다운받을 수 없도록 프로그램을 수정해야 하거나 파일 다운로드 다운로드 할 파일의 URL 상의 주소를 적어 다운받게 하는 것이 좋음.</li><li>만약 다운로드 하는 대상 파일을 SQL을 통해서 정하고 있는 경우 SQL 인젝선 공격 기법의 방어 대책을 적용 해야만 함.</li></ul>",
        "<ul><li>2019 한국 인터넷 진흥원 소프트웨어 개발 보안 가이드 p272 참고</li><li>2019 행안부 한국인터넷 진흥원 소프트웨어 보안약점 진단가이드 p365 참고</li><li>국정원 8대 취약점 참고</li></ul>");


insert into poc_scenario (poc_scenario_id, poc_category_id, solution_id, content) values
        (1, 1, 1, "회원가입 비밀번호 유효성 검사"),
        (2, 1, 1, "틀린 비밀번호에 대한 로그인 검사"),
        (3, 1, 1, "로그인 기능 정상 작동 여부"),
        (4, 1, 1, "회원가입 되지 않은 계정에 대한 로그인 여부 검사"),
        (5, 2, 4, "백업 파일 존재 여부 검사"),
        (6, 2, 5, "인증 우회 취약점 검사"),
        (7, 2, 2, "SQL Injection 취약점 검사"),
        (8, 3, 1, "정상적인 게시물 작성 여부 검사"),
        (9, 3, 1, "인증되지 않은 사용자의 게시물 작성 여부 검사"),
        (10, 4, 4, "백업 파일 존재 여부 검사"),
        (11, 4, 3, "XSS 취약점 검사"),
        (12, 4, 2, "SQL Injection 취약점 검사"),
        (13, 5, 1, "정상적인 게시판 출력 여부 검사"),
        (14, 6, 4, "백업 파일 존재 여부 검사"),
        (15, 7, 1, "권한 없는 사용자의 게시물 수정 검사"),
        (16, 7, 1, "정상적인 게시물 수정 검사"),
        (17, 7, 1, "정상적인 게시물 삭제 검사"),
        (18, 8, 4, "백업 파일 존재 여부 검사"),
        (19, 8, 3, "XSS 취약점 검사"),
        (20, 8, 2, "SQL Injection 취약점 검사"),
        (21, 9, 1, "매칭되지 않는 게시물에 대한 검색 기능 검사"),
        (22, 9, 1, "매칭되는 게시물에 대한 검색 기능 검사"),
        (23, 10, 4, "백업 파일 존재 여부 검사"),
        (24, 10, 2, "SQL Injection 취약점 검사"),
        (25, 11, 1, "게시물 비밀번호 유효성 검사"),
        (26, 11, 1, "잘못된 비밀번호에 대한 비밀글 열람 검사"),
        (27, 11, 1, "정상적인 비밀글 작성 검사"),
        (28, 11, 1, "다른 사용자로 정상적인 비밀글 열람 검사"),
        (29, 12, 4, "백업 파일 존재 여부 검사"),
        (30, 12, 5, "인증 우회 취약점 검사"),
        (31, 13, 1, "파일 업로드 정상 작동 여부 검사"),
        (32, 13, 1, "파일 다운로드 정상 작동 여부 검사"),
        (33, 14, 6, "백업 파일 존재 여부 검사"),
        (34, 14, 7, "파일 다운로드 취약점");




insert into poc_common (poc_common_id, stage_id, content) values
        (1, 1, "const tm = require('../module/TestModule'); const sm = require('../module/module_step1'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (2, 2, "const tm = require('../module/TestModule'); const sm = require('../module/module_step2'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (3, 3, "const tm = require('../module/TestModule'); const sm = require('../module/module_step3'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (4, 4, "const tm = require('../module/TestModule'); const sm = require('../module/module_step4'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (5, 5, "const tm = require('../module/TestModule'); const sm = require('../module/module_step5'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (6, 6, "const tm = require('../module/TestModule'); const sm = require('../module/module_step6'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (7, 7, "const tm = require('../module/TestModule'); const sm = require('../module/module_step7'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);");


insert into poc_case (poc_case_id, poc_scenario_id, poc_common_id, content) values
        (1, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '123', false);"),
        (2, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '!@#', false);"),
        (3, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'a1!', false);"),
        (4, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'qwe123456', false);"),
        (5, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'qwe!@#$%^', false);"),
        (6, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '123456!@#', false);"),
        (7, 2, 1, "sm.Test_SignUpAndLogin_WithOtherPasswd(tm.GetRandomID(), 'qwe123!@#', 'asd456^&*');"),
        (8, 2, 1, "sm.Test_SignUpAndLogin_WithOtherPasswd(tm.GetRandomID(), 'qwe123!@#', 'asd456^&*');"),
        (9, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'qwe123!@#', true);"),
        (10, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'a1!@#$%^&*', true);"),
        (11, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '0z!@#$%^&*', true);"),
        (12, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'asd456^&*', true);"),
        (15, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (16, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (17, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (18, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (19, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (13, 5, 1, "tm.TestBackupFile(url.signUp);"),
        (14, 5, 1, "tm.TestBackupFile(url.login);"),
        (20, 6, 1, "sm.Test_SignUpAndLogin_WithArrayPasswd(tm.GetRandomID(), 'qwe123!@#', 'asd');"),
        (21, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a' or 'a'='a\", tm.GetRandomID(), false);"),
        (22, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a' or 'a'='a\", false);"),
        (23, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a'||'a'='a\", tm.GetRandomID(), false);"),
        (24, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a'||'a'='a\", false);"),
        (25, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a')||1#\", tm.GetRandomID(), false);"),
        (26, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a')||1#\", false);"),
        (27, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a') or 1#\", tm.GetRandomID(), false);"),
        (28, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a') or 1#\", false);"),
        (29, 7, 1, "sm.Test_Login(tm.GetRandomID() + 'asdf\" or \"a\"=\"a', tm.GetRandomID(), false);"),
        (30, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + 'asdf\" or \"a\"=\"a', false);"),
        (31, 7, 1, "sm.Test_Login(tm.GetRandomID() + 'asdf\" || \"a\" = \"a', tm.GetRandomID(), false);"),
        (32, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + 'asdf\" || \"a\" = \"a', false);"),
        (33, 7, 1, "sm.Test_Login(tm.GetRandomID() + 'asdf\")||1#', tm.GetRandomID(), false);"),
        (34, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + 'asdf\")||1#', false);"),
        (35, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title1', 'step2_content1', true);"),
        (36, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title2', 'step2_content2', true);"),
        (37, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title3', 'step2_content3', true);"),
        (38, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title4', 'step2_content4', true);"),
        (39, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_qdhbqwdbkjsdakj', 'alk;hjfskjhasdjkh()asd\"asdasd\"qq', true);"),
        (40, 9, 2, "sm.Test_WriteDocument_NotLogin('step2_title_nl', 'step2_content_nl');"),
        (41, 9, 2, "sm.Test_WriteDocument_NotLogin('step2_asd;lkjasdkjmqwd', 'step2_edb hjdqwhbjqdwijn');"),
        (42, 9, 2, "sm.Test_WriteDocument_NotLogin('', '');"),
        (43, 9, 2, "sm.Test_WriteDocument_NotLogin('step2_wnkwnkdjnidsenjkewskjsls', 'step2_holla');"),
        (44, 10, 2, "tm.TestBackupFile(url.writeDocument);"),
        (45, 10, 2, "tm.TestBackupFile(url.document);"),
        (46, 11, 2, "sm.Test_WriteDocument_And_NotExist('p' + tm.Inserttm.GetRandomID()(\"<xmp>\", tm.GetRandomID()) + 's', 'step2_normal_content', tm.GetRandomID());"),
        (47, 11, 2, "sm.Test_WriteDocument_And_NotExist('step2_normal_title', 'p' + tm.Inserttm.GetRandomID()(\"<xmp>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (48, 11, 2, "sm.Test_WriteDocument_And_NotExist('p' + tm.Inserttm.GetRandomID()(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', 'step2_normal_content', tm.GetRandomID());"),
        (49, 11, 2, "sm.Test_WriteDocument_And_NotExist('step2_normal_title', 'p' + tm.Inserttm.GetRandomID()(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (50, 11, 2, "sm.Test_WriteDocument_And_NotExist('p' + tm.Inserttm.GetRandomID()(\"<img src=``>\", tm.GetRandomID()) + 's', 'step2_normal_content', tm.GetRandomID());"),
        (51, 11, 2, "sm.Test_WriteDocument_And_NotExist('step2_normal_title', 'p' + tm.Inserttm.GetRandomID()(\"<img src=``>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (52, 12, 2, "sm.Test_WriteDocument(\"asdf' or 'a'='a\", 'step2_sql_content', true);"),
        (53, 12, 2, "sm.Test_WriteDocument('step2_sql_title', \"asdf' or 'a'='a\", true);"),
        (54, 12, 2, "sm.Test_OpenDocument_Fail(\"asdf' or 'a'='a\");"),
        (55, 12, 2, "sm.Test_WriteDocument(\"a') or -- a\", 'step2_sql_content', true);"),
        (56, 12, 2, "sm.Test_WriteDocument('step2_sql_title', \"a') or -- a\", true);"),
        (57, 12, 2, "sm.Test_OpenDocument_Fail(\"a') or -- a\");"),
        (58, 12, 2, "sm.Test_WriteDocument(\"\\\", 'step2_sql_content', true);"),
        (59, 12, 2, "sm.Test_WriteDocument('step2_sql_title', \"\\\", true);"),
        (60, 12, 2, "sm.Test_OpenDocument_Fail(\"\\\");"),
        (61, 12, 2, "sm.Test_WriteDocument('a\" or 1 -- a', 'step2_sql_content', true);"),
        (62, 12, 2, "sm.Test_WriteDocument('step2_sql_title', 'a\" or 1 -- a', true);"),
        (63, 12, 2, "sm.Test_OpenDocument_Fail('a\" or 1 -- a');"),
        (64, 12, 2, "sm.Test_WriteDocument('a\") or #', 'step2_sql_content', true);"),
        (65, 12, 2, "sm.Test_WriteDocument('step2_sql_title', 'a\") or #', true);"),
        (66, 12, 2, "sm.Test_OpenDocument_Fail('a\") or #');"),
        (67, 12, 2, "sm.Test_WriteDocument('asdf\" or \"a\"=\"a', 'step2_sql_content', true);"),
        (68, 12, 2, "sm.Test_WriteDocument('step2_sql_title', 'asdf\" or \"a\"=\"a', true);"),
        (69, 12, 2, "sm.Test_OpenDocument_Fail('asdf\" or \"a\"=\"a');"),
        (70, 13, 3, "sm.Test_Board('title1', 'content1');"),
        (71, 13, 3, "sm.Test_Board('title2', 'content2');"),
        (72, 13, 3, "sm.Test_Board('title3', 'content3');"),
        (73, 13, 3, "sm.Test_Board('title4', 'content4');"),
        (74, 13, 3, "sm.Test_Board('title5', 'content5');"),
        (75, 13, 3, "sm.Test_Board('title6', 'content6');"),
        (76, 13, 3, "sm.Test_Board('title7', 'content7');"),
        (77, 14, 3, "tm.TestBackupFile(url.board);"),
        (78, 15, 4, "sm.Test_ModifyDocument_Other();"),
        (79, 15, 4, "sm.Test_DeleteDocument_Other();"),
        (80, 16, 4, "sm.Test_ModifyDocument_AndEqual('Test', 'Test', true);"),
        (81, 16, 4, "sm.Test_ModifyDocument_AndEqual('TestASDASDASDASDASDASD', 'TestQWEQWEQWEQWEQWEQWE', true);"),
        (82, 16, 4, "sm.Test_ModifyDocument_AndEqual('TestTitle', 'TestContent', true);"),
        (83, 17, 4, "sm.Test_DeleteDocument_Possible();"),
        (84, 18, 4, "tm.TestBackupFile(url.deleteDocument);"),
        (85, 18, 4, "tm.TestBackupFile(url.modifyDocument);"),
        (86, 19, 4, "sm.Test_ModifyDocument_AndNotExist('p' + tm.InsertElementID(\"<xmp>\", tm.GetRandomID()) + 's', 'step4_normal_content', tm.GetRandomID());"),
        (87, 19, 4, "sm.Test_ModifyDocument_AndNotExist('step4_normal_title', 'p' + tm.InsertElementID(\"<xmp>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (88, 19, 4, "sm.Test_ModifyDocument_AndNotExist('p' + tm.InsertElementID(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', 'step4_normal_content', tm.GetRandomID());"),
        (89, 19, 4, "sm.Test_ModifyDocument_AndNotExist('step4_normal_title', 'p' + tm.InsertElementID(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (90, 19, 4, "sm.Test_ModifyDocument_AndNotExist('p' + tm.InsertElementID(\"<img src=``>\", tm.GetRandomID()) + 's', 'step4_normal_content', tm.GetRandomID());"),
        (91, 19, 4, "sm.Test_ModifyDocument_AndNotExist('step4_normal_title', 'p' + tm.InsertElementID(\"<img src=``>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (92, 20, 4, "sm.Test_ModifyDocument(\"asdf' or 'a'='a\", 'step4_sql_content', true);"),
        (93, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', \"asdf' or 'a'='a\", true);"),
        (94, 20, 4, "sm.Test_DeleteDocument(\"asdf' or 'a'='a\");"),
        (95, 20, 4, "sm.Test_ModifyDocument(\"a') or -- a\", 'step4_sql_content', true);"),
        (96, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', \"a') or -- a\", true);"),
        (97, 20, 4, "sm.Test_DeleteDocument(\"a') or -- a\");"),
        (98, 20, 4, "sm.Test_ModifyDocument(\"\\\", 'step4_sql_content', true);"),
        (99, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', \"\\\", true);"),
        (100, 20, 4, "sm.Test_DeleteDocument(\"\\\");"),
        (101, 20, 4, "sm.Test_ModifyDocument('a\" or 1 -- a', 'step4_sql_content', true);"),
        (102, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', 'a\" or 1 -- a', true);"),
        (103, 20, 4, "sm.Test_DeleteDocument('a\" or 1 -- a');"),
        (104, 20, 4, "sm.Test_ModifyDocument('a\") or #', 'step4_sql_content', true);"),
        (105, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', 'a\") or #', true);"),
        (106, 20, 4, "sm.Test_DeleteDocument('a\") or #');"),
        (107, 20, 4, "sm.Test_ModifyDocument('asdf\" or \"a\"=\"a', 'step4_sql_content', true);"),
        (108, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', 'asdf\" or \"a\"=\"a', true);"),
        (109, 20, 4, "sm.Test_DeleteDocument('asdf\" or \"a\"=\"a');"),
        (110, 21, 5, "sm.Test_SearchDocument('title1', 'content1', 'title', 'content', false);"),
        (111, 21, 5, "sm.Test_SearchDocument('title2', 'Torreta2', 'title', 'rr', false);"),
        (112, 21, 5, "sm.Test_SearchDocument('title3', 'Torreta3', 'content', 'tle', false);"),
        (113, 21, 5, "sm.Test_SearchDocument('title4', 'Torreta4', 'content', 'it', false);"),
        (114, 22, 5, "sm.Test_SearchDocument('title5', 'content5', 'title', 'T', true);"),
        (115, 22, 5, "sm.Test_SearchDocument('title6', 'content6', 'title', 'title', true);"),
        (116, 22, 5, "sm.Test_SearchDocument('title7', 'content7', 'title', 'tle', true);"),
        (117, 22, 5, "sm.Test_SearchDocument('title8', 'Torreta8', 'content', 'T', true);"),
        (118, 22, 5, "sm.Test_SearchDocument('title9', 'Torreta9', 'content', 'rreta', true);"),
        (119, 23, 5, "tm.TestBackupFile(url.board);"),
        (120, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \"asdf' or 'a'='a\", tm.GetRandomID(), false);"),
        (121, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', \"asdf' or 'a'='a\", false);"),
        (122, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \"a') or -- a\", tm.GetRandomID(), false);"),
        (123, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', \"a') or -- a\", false);"),
        (124, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \"\\\", \" || 1 #\", false);"),
        (125, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \" || 1 #\", \"\\\", false);"),
        (126, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', 'a\" or 1 -- a', tm.GetRandomID(), false);"),
        (127, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', 'a\" or 1 -- a', false);"),
        (128, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', 'a\") or #', tm.GetRandomID(), false);"),
        (129, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', 'a\") or #', false);"),
        (130, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', 'asdf\" or \"a\"=\"a', tm.GetRandomID(), false);"),
        (131, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', 'asdf\" or \"a\"=\"a', false);"),
        (132, 25, 6, "sm.Test_SecretDocument('title1', 'content1', '', false);"),
        (133, 25, 6, "sm.Test_SecretDocument('title2', 'content2', '9', false);"),
        (134, 25, 6, "sm.Test_SecretDocument('title3', 'content3', '15', false);"),
        (135, 25, 6, "sm.Test_SecretDocument('title4', 'content4', '123', false);"),
        (136, 25, 6, "sm.Test_SecretDocument('title5', 'content5', '18654', false);"),
        (137, 25, 6, "sm.Test_SecretDocument('title6', 'content6', '18654a', false);"),
        (138, 25, 6, "sm.Test_SecretDocument('title7', 'content7', 'asdv', false);"),
        (139, 25, 6, "sm.Test_SecretDocument('title8', 'content8', 'qw', false);"),
        (140, 25, 6, "sm.Test_SecretDocument('title9', 'content9', 'p', false);"),
        (141, 25, 6, "sm.Test_SecretDocument('title10', 'content10', '164*', false);"),
        (142, 25, 6, "sm.Test_SecretDocument('title11', 'content11', '16*)(', false);"),
        (143, 25, 6, "sm.Test_SecretDocument('title12', 'content12', '(*)(', false);"),
        (144, 26, 6, "sm.Test_SecretDocumentOther('title13', 'content13', '8718', '1111', false);"),
        (145, 26, 6, "sm.Test_SecretDocumentOther('title14', 'content14', '8741', '1234', false);"),
        (146, 26, 6, "sm.Test_SecretDocumentOther('title15', 'content15', '1919', '9995', false);"),
        (147, 27, 6, "sm.Test_SecretDocument('title16', 'content16', '1234', true);"),
        (148, 27, 6, "sm.Test_SecretDocument('title17', 'content17', '9978', true);"),
        (149, 27, 6, "sm.Test_SecretDocument('title18', 'content18', '1854', true);"),
        (150, 28, 6, "sm.Test_SecretDocumentOther('title19', 'content19', '1854', '1854', true);"),
        (151, 28, 6, "sm.Test_SecretDocumentOther('title20', 'content20', '8848', '8848', true);"),
        (152, 28, 6, "sm.Test_SecretDocumentOther('title21', 'content21', '4635', '4635', true);"),
        (153, 29, 6, "tm.TestBackupFile(url.writeDocument);"),
        (154, 29, 6, "tm.TestBackupFile(url.document);"),
        (155, 30, 6, "sm.Test_SecretDocument_WithArrayPasswd('step6_sql_title', 'step6_sql_content', '0224', '4852');"),
        (156, 31, 7, "sm.Test_UploadFile_AndEqualFile('ini title', 'ini content', './uploads/test.ini', true);"),
        (157, 31, 7, "sm.Test_UploadFile_AndEqualFile('jpg title', 'jpg content', './uploads/test.jpg', true);"),
        (158, 31, 7, "sm.Test_UploadFile_AndEqualFile('zip title', 'zip content', './uploads/test.zip', true);"),
        (159, 31, 7, "sm.Test_UploadFile_AndEqualFile('txt title', 'txt content', './uploads/test.txt', true);"),
        (160, 32, 7, "sm.Test_UploadFile_DownloadOther('other ini title', 'other ini content', './uploads/test.ini');"),
        (161, 32, 7, "sm.Test_UploadFile_DownloadOther('other jpg title', 'other jpg content', './uploads/test.jpg');"),
        (162, 32, 7, "sm.Test_UploadFile_DownloadOther('other zip title', 'other zip content', './uploads/test.zip');"),
        (163, 32, 7, "sm.Test_UploadFile_DownloadOther('other txt title', 'other txt content', './uploads/test.txt');"),
        (164, 33, 7, "tm.TestBackupFile(url.writeDocument);"),
        (165, 33, 7, "tm.TestBackupFile(url.download);"),
        (166, 34, 7, "sm.Test_DownloadFile_AndSearch('../../../../../../../../../../../../../../etc/passwd', 'root:x:0:0');"),
        (167, 34, 7, "sm.Test_DownloadFile_AndSearch('..\..\..\..\..\..\..\..\..\..\..\..\..\..\windows\win.ini', '(\[fonts\]|\[extensions\])');");

