insert into member (member_id, email, name, password) values (1, 'test@naver.com', 'tester', 'qwe123!@3'); # 테스트 계정

insert into scenario (scenario_id, title, sub_title, content, stage_count)
    values (1, "간단한 커뮤니티 게시판 만들기", "Simple-Community-Board",
     "전세계적으로 인터넷이 확대되면서 보안 기능은 꼭 필요한 과정이 되어 가고 있습니다. 인터넷 커뮤니티를 만들 때 가장 기본이 되는 과정과 그 때 필요한 보안 기능에 관하여 배울 수 있습니다.", 4);

insert into stage (stage_id, scenario_id, no, title) values
        (1, 1, 1, "회원가입 및 로그인"),
        (2, 1, 2, "게시물 작성"),
        (3, 1, 3, "게시판"),
        (4, 1, 4, "게시물 수정 및 삭제"),
        (5, 1, 5, "게시판 검색"),
        (6, 1, 6, "비밀 게시물"),
        (7, 1, 7, "파일 업로드 및 다운로드");

insert into subject (subject_id, stage_id, title) values
        (1, 1, "회원가입"),
        (2, 1, "로그인"),
        (3, 2, "게시물 작성"),
        (4, 2, "게시물 열람"),
        (5, 3, "게시판 목록"),
        (6, 4, "게시물 수정"),
        (7, 4, "게시물 삭제"),
        (8, 5, "게시물 검색"),
        (9, 6, "비밀글 설정"),
        (10, 6, "비밀글 열람"),
        (11, 7, "파일 업로드"),
        (12, 7, "파일 다운로드");

insert into request (request_id, subject_id, content) values
        (1, 1, "페이지 URL 명은 signUp_check 으로 지정한다."),
        (2, 1, "중복된 아이디로 회원가입이 되면 안된다."),
        (3, 1, "비밀번호는 영어, 숫자, 특수문자가 하나 이상씩 포함돼야 한다."),
        (4, 1, "비밀번호는 최소 9자 이상이어야 한다."),
        (5, 1, "특수문자는 !@#$%^&*가 보장되어야 한다."),
        (6, 2, "페이지 URL 명은 login_check 으로 지정한다."),
        (7, 2, "로그인은 회원가입에 성공한 계정으로만 가능해야 한다."),
        (8, 3, "페이지 URL 명은 writeDocument_check 으로 지정한다."),
        (9, 3, "게시물 작성은 로그인한 사용자만 가능하다."),
        (10, 3, "게시물 작성이 성공하면 1 이상의 고유한 게시물 번호를 부여받는다."),
        (11, 3, "게시물 작성이 실패하면 수행 결과에서 게시물 번호로 -1이 반환된다."),
        (12, 3, "제목의 최대 길이는 최소 80자 이상이어야 한다."),
        (13, 3, "내용의 최대 길이는 최소 300자 이상이어야 한다."),
        (14, 4, "페이지 URL 명은 document 로 지정한다."),
        (15, 4, "게시물 페이지는 게시물 번호를 파라미터로 받아 해당 게시물의 내용을 보여준다."),
        (16, 4, "게시물이 없을 경우 Fail 출력"),
        (17, 5, "페이지 URL 명은 board 로 지정한다."),
        (18, 5, "게시판 페이지는 게시물들의 목록을 보여준다."),
        (19, 5, "가장 최근에 작성한 게시물이 목록 최상단에 있어야 한다."),
        (20, 5, "목록의 각 항목에는 제목이 있어야 하고, 제목을 클릭하면 해당 게시물 페이지로 이동해야 한다."),
        (21, 6, "페이지 URL 명은 modifyDocument_check 으로 지정한다."),
        (22, 6, "게시물 수정은 게시물을 작성한 사람만 할 수 있다."),
        (23, 7, "페이지 URL 명은 deleteDocument_check 으로 지정한다."),
        (24, 7, "게시물 삭제는 게시물을 작성한 사람만 할 수 있다."),
        (25, 8, "페이지 URL 명은 board 로 지정한다."),
        (26, 8, "게시판 페이지에서 게시물 검색을 할 수 있다."),
        (27, 9, "게시물 작성 및 수정 페이지에서 게시물에 비밀글 설정을 할 수 있다."),
        (28, 9, "기존 파라미터에 추가적으로 secret과 passwd 파라미터가 더해진다."),
        (29, 9, "비밀글은 게시물 비밀번호를 아는 사용자만 볼 수 있다."),
        (30, 9, "게시물 비밀번호는 4자리 숫자만 사용가능하다."),
        (31, 10, "비밀글 설정이 되어있는 게시물 페이지를 방문할 때는 추가적으로 passwd 파라미터가 필요하다."),
        (32, 10, "비밀글에 접근할 때 비밀번호가 틀리거나 제공되지 않으면 결과로 Fail을 출력한다."),
        (33, 11, "게시물 작성 및 수정 페이지에서 파일 업로드를 할 수 있다."),
        (34, 11, "한 게시물 당 하나 이상의 파일을 업로드할 수 있으며, 업르드 가능한 최대 용량은 최소 1MB 이상 이어야이다."),
        (35, 12, "페이지 URL 명은 fileDownload 로 지정한다."),
        (36, 12, "기존 파라미터에 추가적으로 file 파라미터가 더해진다."),
        (37, 12, "게시물 페이지에서 업로드된 파일의 이름을 확인할 수 있다."),
        (38, 12, "파일의 이름을 클릭할 경우 download 페이지로 이동하여, 해당 파일을 다운로드 할 수 있다."),
        (39, 12, "파일 다운로드 URL에는 number 파라미터와 file 파라미터가 존재한다."),
        (40, 12, "파라미터에 맞는 파일이 존재하지 않을 경우 HTML Status Code로 404를 반환한다.");



insert into parameter_group (group_id, subject_id, type) values
        (1, 1, "POST"),
        (2, 2, "POST"),
        (3, 3, "POST"),
        (4, 4, "GET"),
        (5, 5, "GET"),
        (6, 6, "POST"),
        (7, 7, "POST"),
        (8, 8, "GET"),
        (9, 9, "POST"),
        (10, 10, "POST"),
        (11, 11, "POST"),
        (12, 12, "GET");


insert into parameter (parameter_id, group_id, name, value) values
        (1, 1, "id", "계정 아이디"),
        (2, 1, "passwd", "계정 비밀번호"),
        (3, 2, "id", "계정 아이디"),
        (4, 2, "passwd", "계정 비밀번호"),
        (5, 3, "title", "게시글 제목"),
        (6, 3, "content", "게시글 내용"),
        (7, 4, "number", "게시물 번호"),
        (8, 5, "pageNo", "페이지 번호"),
        (9, 6, "number", "게시물 번호"),
        (10, 6, "title", "게시물 제목"),
        (11, 6, "content", "게시물 내용"),
        (12, 7, "number", "게시물 번호"),
        (13, 8, "category", "문자열 \"title\" or \"content\""),
        (14, 8, "search", "검색 내용"),
        (15, 9, "secret", "문자열 \"true\" or \"false\""),
        (16, 9, "passwd", "게시물 비밀번호(secret이 true일 때만 제공"),
        (17, 10, "passwd", "게시물 비밀번호"),
        (18, 11, "file", "업로드 파일"),
        (19, 12, "number", "게시물 번호"),
        (20, 12, "file", "다운로드 파일 이름");


insert into result (result_id, subject_id, content) values
        (1, 1, "<any id='result'>[회원가입 성공 여부]</any>"),
        (2, 1, "[회원가입 성공 여부]: Success/Fail"),
        (3, 2, "<any id='result'>[로그인 성공 여부]</any>"),
        (4, 2, "[로그인 성공 여부]: Success/Fail"),
        (5, 3, "<any id='number'>[게시물 번호]</any>"),
        (6, 4, "<any id='result'>Fail</any> (게시물이 없을 때만 제공)"),
        (7, 4, "<any id='number'>[게시물 번호]</any>"),
        (8, 4, "<any id='title'>[게시물 제목]</any>"),
        (9, 4, "<any id='content'>[게시물 내용]</any>"),
        (10, 5, "<any id='title_[게시물 번호]'>[게시물 제목]</any>"),
        (11, 6, "<any id='result'>[수정 성공 여부]</any>"),
        (12, 6, "[수정 성공 여부]: Success/Fail"),
        (13, 7, "<any id='result'>[삭제 성공 여부]</any>"),
        (14, 7, "[삭제 성공 여부]: Success/Fail"),
        (15, 8, "<any id='title_[게시물 번호]'>[게시물 제목]</any>"),
        (16, 9, ""),
        (17, 10, "<any id='result'>Fail</any> (비밀번호 틀릴 시에만 제공)"),
        (18, 11, ""),
        (19, 12, "파일 (파일이 존재할 때만 제공)");


insert into poc_category (poc_category_id, stage_id, type) values
        (1, 1, "FUNCTION"),
        (2, 1, "SECURITY"),
        (3, 2, "FUNCTION"),
        (4, 2, "SECURITY"),
        (5, 3, "FUNCTION"),
        (6, 3, "SECURITY"),
        (7, 4, "FUNCTION"),
        (8, 4, "SECURITY"),
        (9, 5, "FUNCTION"),
        (10, 5, "SECURITY"),
        (11, 6, "FUNCTION"),
        (12, 6, "SECURITY"),
        (13, 7, "FUNCTION"),
        (14, 7, "SECURITY");


insert into poc_scenario (poc_scenario_id, poc_category_id, content) values
        (1, 1, "회원가입 비밀번호 유효성 검사"),
        (2, 1, "틀린 비밀번호에 대한 로그인 검사"),
        (3, 1, "로그인 기능 정상 작동 여부"),
        (4, 1, "회원가입 되지 않은 계정에 대한 로그인 여부 검사"),
        (5, 2, "백업 파일 존재 여부 검사"),
        (6, 2, "인증 우회 취약점 검사"),
        (7, 2, "SQL Injection 취약점 검사"),
        (8, 3, "정상적인 게시물 작성 여부 검사"),
        (9, 3, "인증되지 않은 사용자의 게시물 작성 여부 검사"),
        (10, 4, "백업 파일 존재 여부 검사"),
        (11, 4, "XSS 취약점 검사"),
        (12, 4, "SQL Injection 취약점 검사"),
        (13, 5, "정상적인 게시판 출력 여부 검사"),
        (14, 6, "백업 파일 검사"),
        (15, 7, "권한 없는 사용자의 게시물 수정 검사"),
        (16, 7, "정상적인 게시물 수정 검사"),
        (17, 7, "정상적인 게시물 삭제 검사"),
        (18, 8, "백업 파일 검사"),
        (19, 8, "XSS 취약점 검사"),
        (20, 8, "SQL Injection 취약점 검사"),
        (21, 9, "매칭되지 않는 게시물에 대한 검색 기능 검사"),
        (22, 9, "매칭되는 게시물에 대한 검색 기능 검사"),
        (23, 10, "백업 파일 존재 여부 검사"),
        (24, 10, "SQL Injection 취약점 검사"),
        (25, 11, "게시물 비밀번호 유효성 검사"),
        (26, 11, "잘못된 비밀번호에 대한 비밀글 열람 검사"),
        (27, 11, "정상적인 비밀글 작성 검사"),
        (28, 11, "다른 사용자로 정상적인 비밀글 열람 검사"),
        (29, 12, "백업 파일 존재 여부 검사"),
        (30, 12, "인증 우회 취약점 검사");



insert into poc_common (poc_common_id, stage_id, content) values
        (1, 1, "const tm = require('../module/TestModule'); const sm = require('../module/module_step1'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (2, 2, "const tm = require('../module/TestModule'); const sm = require('../module/module_step2'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (3, 3, "const tm = require('../module/TestModule'); const sm = require('../module/module_step3'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (4, 4, "const tm = require('../module/TestModule'); const sm = require('../module/module_step4'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (5, 5, "const tm = require('../module/TestModule'); const sm = require('../module/module_step5'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (6, 6, "const tm = require('../module/TestModule'); const sm = require('../module/module_step6'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);"),
        (7, 7, "const tm = require('../module/TestModule'); const sm = require('../module/module_step7'); const baseUrl = casper.cli.get('url'); const extension = casper.cli.get('extension'); const url = new tm.URL(baseUrl, extension);");


insert into poc_case (poc_case_id, poc_scenario_id, poc_common_id, content) values
        (1, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '123', false);"),
        (2, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '!@#', false);"),
        (3, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'a1!', false);"),
        (4, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'qwe123456', false);"),
        (5, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'qwe!@#$%^', false);"),
        (6, 1, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '123456!@#', false);"),
        (7, 2, 1, "sm.Test_SignUpAndLogin_WithOtherPasswd(tm.GetRandomID(), 'qwe123!@#', 'asd456^&*');"),
        (8, 2, 1, "sm.Test_SignUpAndLogin_WithOtherPasswd(tm.GetRandomID(), 'qwe123!@#', 'asd456^&*');"),
        (9, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'qwe123!@#', true);"),
        (10, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'a1!@#$%^&*', true);"),
        (11, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), '0z!@#$%^&*', true);"),
        (12, 3, 1, "sm.Test_SignUpAndLogin(tm.GetRandomID(), 'asd456^&*', true);"),
        (15, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (16, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (17, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (18, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (19, 4, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID(), false);"),
        (13, 5, 1, "tm.TestBackupFile(url.signUp);"),
        (14, 5, 1, "tm.TestBackupFile(url.login);"),
        (20, 6, 1, "sm.Test_SignUpAndLogin_WithArrayPasswd(tm.GetRandomID(), 'qwe123!@#', 'asd');"),
        (21, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a' or 'a'='a\", tm.GetRandomID(), false);"),
        (22, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a' or 'a'='a\", false);"),
        (23, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a'||'a'='a\", tm.GetRandomID(), false);"),
        (24, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a'||'a'='a\", false);"),
        (25, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a')||1#\", tm.GetRandomID(), false);"),
        (26, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a')||1#\", false);"),
        (27, 7, 1, "sm.Test_Login(tm.GetRandomID() + \"a') or 1#\", tm.GetRandomID(), false);"),
        (28, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + \"a') or 1#\", false);"),
        (29, 7, 1, "sm.Test_Login(tm.GetRandomID() + 'asdf\" or \"a\"=\"a', tm.GetRandomID(), false);"),
        (30, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + 'asdf\" or \"a\"=\"a', false);"),
        (31, 7, 1, "sm.Test_Login(tm.GetRandomID() + 'asdf\" || \"a\" = \"a', tm.GetRandomID(), false);"),
        (32, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + 'asdf\" || \"a\" = \"a', false);"),
        (33, 7, 1, "sm.Test_Login(tm.GetRandomID() + 'asdf\")||1#', tm.GetRandomID(), false);"),
        (34, 7, 1, "sm.Test_Login(tm.GetRandomID(), tm.GetRandomID() + 'asdf\")||1#', false);"),
        (35, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title1', 'step2_content1', true);"),
        (36, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title2', 'step2_content2', true);"),
        (37, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title3', 'step2_content3', true);"),
        (38, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_title4', 'step2_content4', true);"),
        (39, 8, 2, "sm.Test_WriteDocument_AndEqual('step2_qdhbqwdbkjsdakj', 'alk;hjfskjhasdjkh()asd\"asdasd\"qq', true);"),
        (40, 9, 2, "sm.Test_WriteDocument_NotLogin('step2_title_nl', 'step2_content_nl');"),
        (41, 9, 2, "sm.Test_WriteDocument_NotLogin('step2_asd;lkjasdkjmqwd', 'step2_edb hjdqwhbjqdwijn');"),
        (42, 9, 2, "sm.Test_WriteDocument_NotLogin('', '');"),
        (43, 9, 2, "sm.Test_WriteDocument_NotLogin('step2_wnkwnkdjnidsenjkewskjsls', 'step2_holla');"),
        (44, 10, 2, "tm.TestBackupFile(url.writeDocument);"),
        (45, 10, 2, "tm.TestBackupFile(url.document);"),
        (46, 11, 2, "sm.Test_WriteDocument_And_NotExist('p' + tm.Inserttm.GetRandomID()(\"<xmp>\", tm.GetRandomID()) + 's', 'step2_normal_content', tm.GetRandomID());"),
        (47, 11, 2, "sm.Test_WriteDocument_And_NotExist('step2_normal_title', 'p' + tm.Inserttm.GetRandomID()(\"<xmp>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (48, 11, 2, "sm.Test_WriteDocument_And_NotExist('p' + tm.Inserttm.GetRandomID()(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', 'step2_normal_content', tm.GetRandomID());"),
        (49, 11, 2, "sm.Test_WriteDocument_And_NotExist('step2_normal_title', 'p' + tm.Inserttm.GetRandomID()(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (50, 11, 2, "sm.Test_WriteDocument_And_NotExist('p' + tm.Inserttm.GetRandomID()(\"<img src=``>\", tm.GetRandomID()) + 's', 'step2_normal_content', tm.GetRandomID());"),
        (51, 11, 2, "sm.Test_WriteDocument_And_NotExist('step2_normal_title', 'p' + tm.Inserttm.GetRandomID()(\"<img src=``>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (52, 12, 2, "sm.Test_WriteDocument(\"asdf' or 'a'='a\", 'step2_sql_content', true);"),
        (53, 12, 2, "sm.Test_WriteDocument('step2_sql_title', \"asdf' or 'a'='a\", true);"),
        (54, 12, 2, "sm.Test_OpenDocument_Fail(\"asdf' or 'a'='a\");"),
        (55, 12, 2, "sm.Test_WriteDocument(\"a') or -- a\", 'step2_sql_content', true);"),
        (56, 12, 2, "sm.Test_WriteDocument('step2_sql_title', \"a') or -- a\", true);"),
        (57, 12, 2, "sm.Test_OpenDocument_Fail(\"a') or -- a\");"),
        (58, 12, 2, "sm.Test_WriteDocument(\"\\\", 'step2_sql_content', true);"),
        (59, 12, 2, "sm.Test_WriteDocument('step2_sql_title', \"\\\", true);"),
        (60, 12, 2, "sm.Test_OpenDocument_Fail(\"\\\");"),
        (61, 12, 2, "sm.Test_WriteDocument('a\" or 1 -- a', 'step2_sql_content', true);"),
        (62, 12, 2, "sm.Test_WriteDocument('step2_sql_title', 'a\" or 1 -- a', true);"),
        (63, 12, 2, "sm.Test_OpenDocument_Fail('a\" or 1 -- a');"),
        (64, 12, 2, "sm.Test_WriteDocument('a\") or #', 'step2_sql_content', true);"),
        (65, 12, 2, "sm.Test_WriteDocument('step2_sql_title', 'a\") or #', true);"),
        (66, 12, 2, "sm.Test_OpenDocument_Fail('a\") or #');"),
        (67, 12, 2, "sm.Test_WriteDocument('asdf\" or \"a\"=\"a', 'step2_sql_content', true);"),
        (68, 12, 2, "sm.Test_WriteDocument('step2_sql_title', 'asdf\" or \"a\"=\"a', true);"),
        (69, 12, 2, "sm.Test_OpenDocument_Fail('asdf\" or \"a\"=\"a');"),
        (70, 13, 3, "sm.Test_Board('title1', 'content1');"),
        (71, 13, 3, "sm.Test_Board('title2', 'content2');"),
        (72, 13, 3, "sm.Test_Board('title3', 'content3');"),
        (73, 13, 3, "sm.Test_Board('title4', 'content4');"),
        (74, 13, 3, "sm.Test_Board('title5', 'content5');"),
        (75, 13, 3, "sm.Test_Board('title6', 'content6');"),
        (76, 13, 3, "sm.Test_Board('title7', 'content7');"),
        (77, 14, 3, "tm.TestBackupFile(url.board);"),
        (78, 15, 4, "sm.Test_ModifyDocument_Other();"),
        (79, 15, 4, "sm.Test_DeleteDocument_Other();"),
        (80, 16, 4, "sm.Test_ModifyDocument_AndEqual('Test', 'Test', true);"),
        (81, 16, 4, "sm.Test_ModifyDocument_AndEqual('TestASDASDASDASDASDASD', 'TestQWEQWEQWEQWEQWEQWE', true);"),
        (82, 16, 4, "sm.Test_ModifyDocument_AndEqual('TestTitle', 'TestContent', true);"),
        (83, 17, 4, "sm.Test_DeleteDocument_Possible();"),
        (84, 18, 4, "tm.TestBackupFile(url.deleteDocument);"),
        (85, 18, 4, "tm.TestBackupFile(url.modifyDocument);"),
        (86, 19, 4, "sm.Test_ModifyDocument_AndNotExist('p' + tm.InsertElementID(\"<xmp>\", tm.GetRandomID()) + 's', 'step4_normal_content', tm.GetRandomID());"),
        (87, 19, 4, "sm.Test_ModifyDocument_AndNotExist('step4_normal_title', 'p' + tm.InsertElementID(\"<xmp>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (88, 19, 4, "sm.Test_ModifyDocument_AndNotExist('p' + tm.InsertElementID(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', 'step4_normal_content', tm.GetRandomID());"),
        (89, 19, 4, "sm.Test_ModifyDocument_AndNotExist('step4_normal_title', 'p' + tm.InsertElementID(\"<script>alert(1);</script>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (90, 19, 4, "sm.Test_ModifyDocument_AndNotExist('p' + tm.InsertElementID(\"<img src=``>\", tm.GetRandomID()) + 's', 'step4_normal_content', tm.GetRandomID());"),
        (91, 19, 4, "sm.Test_ModifyDocument_AndNotExist('step4_normal_title', 'p' + tm.InsertElementID(\"<img src=``>\", tm.GetRandomID()) + 's', tm.GetRandomID());"),
        (92, 20, 4, "sm.Test_ModifyDocument(\"asdf' or 'a'='a\", 'step4_sql_content', true);"),
        (93, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', \"asdf' or 'a'='a\", true);"),
        (94, 20, 4, "sm.Test_DeleteDocument(\"asdf' or 'a'='a\");"),
        (95, 20, 4, "sm.Test_ModifyDocument(\"a') or -- a\", 'step4_sql_content', true);"),
        (96, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', \"a') or -- a\", true);"),
        (97, 20, 4, "sm.Test_DeleteDocument(\"a') or -- a\");"),
        (98, 20, 4, "sm.Test_ModifyDocument(\"\\\", 'step4_sql_content', true);"),
        (99, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', \"\\\", true);"),
        (100, 20, 4, "sm.Test_DeleteDocument(\"\\\");"),
        (101, 20, 4, "sm.Test_ModifyDocument('a\" or 1 -- a', 'step4_sql_content', true);"),
        (102, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', 'a\" or 1 -- a', true);"),
        (103, 20, 4, "sm.Test_DeleteDocument('a\" or 1 -- a');"),
        (104, 20, 4, "sm.Test_ModifyDocument('a\") or #', 'step4_sql_content', true);"),
        (105, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', 'a\") or #', true);"),
        (106, 20, 4, "sm.Test_DeleteDocument('a\") or #');"),
        (107, 20, 4, "sm.Test_ModifyDocument('asdf\" or \"a\"=\"a', 'step4_sql_content', true);"),
        (108, 20, 4, "sm.Test_ModifyDocument('step4_sql_title', 'asdf\" or \"a\"=\"a', true);"),
        (109, 20, 4, "sm.Test_DeleteDocument('asdf\" or \"a\"=\"a');"),
        (110, 21, 5, "sm.Test_SearchDocument('title1', 'content1', 'title', 'content', false);"),
        (111, 21, 5, "sm.Test_SearchDocument('title2', 'Torreta2', 'title', 'rr', false);"),
        (112, 21, 5, "sm.Test_SearchDocument('title3', 'Torreta3', 'content', 'tle', false);"),
        (113, 21, 5, "sm.Test_SearchDocument('title4', 'Torreta4', 'content', 'it', false);"),
        (114, 22, 5, "sm.Test_SearchDocument('title5', 'content5', 'title', 'T', true);"),
        (115, 22, 5, "sm.Test_SearchDocument('title6', 'content6', 'title', 'title', true);"),
        (116, 22, 5, "sm.Test_SearchDocument('title7', 'content7', 'title', 'tle', true);"),
        (117, 22, 5, "sm.Test_SearchDocument('title8', 'Torreta8', 'content', 'T', true);"),
        (118, 22, 5, "sm.Test_SearchDocument('title9', 'Torreta9', 'content', 'rreta', true);"),
        (119, 23, 5, "tm.TestBackupFile(url.board);"),
        (120, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \"asdf' or 'a'='a\", tm.GetRandomID(), false);"),
        (121, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', \"asdf' or 'a'='a\", false);"),
        (122, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \"a') or -- a\", tm.GetRandomID(), false);"),
        (123, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', \"a') or -- a\", false);"),
        (124, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \"\\\", \" || 1 #\", false);"),
        (125, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', \" || 1 #\", \"\\\", false);"),
        (126, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', 'a\" or 1 -- a', tm.GetRandomID(), false);"),
        (127, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', 'a\" or 1 -- a', false);"),
        (128, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', 'a\") or #', tm.GetRandomID(), false);"),
        (129, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', 'a\") or #', false);"),
        (130, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', 'asdf\" or \"a\"=\"a', tm.GetRandomID(), false);"),
        (131, 24, 5, "sm.Test_SearchDocument('step5_sql_title'+tm.GetRandomID(), 'step5_sql_content', ''step5_sql_title'', 'asdf\" or \"a\"=\"a', false);"),
        (132, 25, 6, "sm.Test_SecretDocument('title1', 'content1', '', false);"),
        (133, 25, 6, "sm.Test_SecretDocument('title2', 'content2', '9', false);"),
        (134, 25, 6, "sm.Test_SecretDocument('title3', 'content3', '15', false);"),
        (135, 25, 6, "sm.Test_SecretDocument('title4', 'content4', '123', false);"),
        (136, 25, 6, "sm.Test_SecretDocument('title5', 'content5', '18654', false);"),
        (137, 25, 6, "sm.Test_SecretDocument('title6', 'content6', '18654a', false);"),
        (138, 25, 6, "sm.Test_SecretDocument('title7', 'content7', 'asdv', false);"),
        (139, 25, 6, "sm.Test_SecretDocument('title8', 'content8', 'qw', false);"),
        (140, 25, 6, "sm.Test_SecretDocument('title9', 'content9', 'p', false);"),
        (141, 25, 6, "sm.Test_SecretDocument('title10', 'content10', '164*', false);"),
        (142, 25, 6, "sm.Test_SecretDocument('title11', 'content11', '16*)(', false);"),
        (143, 25, 6, "sm.Test_SecretDocument('title12', 'content12', '(*)(', false);"),
        (144, 26, 6, "sm.Test_SecretDocumentOther('title13', 'content13', '8718', '1111', false);"),
        (145, 26, 6, "sm.Test_SecretDocumentOther('title14', 'content14', '8741', '1234', false);"),
        (146, 26, 6, "sm.Test_SecretDocumentOther('title15', 'content15', '1919', '9995', false);"),
        (147, 27, 6, "sm.Test_SecretDocument('title16', 'content16', '1234', true);"),
        (148, 27, 6, "sm.Test_SecretDocument('title17', 'content17', '9978', true);"),
        (149, 27, 6, "sm.Test_SecretDocument('title18', 'content18', '1854', true);"),
        (150, 28, 6, "sm.Test_SecretDocumentOther('title19', 'content19', '1854', '1854', true);"),
        (151, 28, 6, "sm.Test_SecretDocumentOther('title20', 'content20', '8848', '8848', true);"),
        (152, 28, 6, "sm.Test_SecretDocumentOther('title21', 'content21', '4635', '4635', true);"),
        (153, 29, 6, "tm.TestBackupFile(url.writeDocument);"),
        (154, 29, 6, "tm.TestBackupFile(url.document);"),
        (155, 30, 6, "sm.Test_SecretDocument_WithArrayPasswd('step6_sql_title', 'step6_sql_content', '0224', '4852');");


